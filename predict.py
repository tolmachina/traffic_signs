"""Predicting on base of model generated by traffic.py"""

import numpy as np
from numpy.lib.function_base import append
import tensorflow as tf
from tensorflow import keras
from sklearn.model_selection import train_test_split
from traffic import load_data, TEST_SIZE
import matplotlib.pyplot as plt


def main():
    print('Please wait while the program is loading...')

    # Get image arrays and labels for all image files
    images, labels, labels_str = load_data("/Volumes/Seagate/Databases/gtsrb")
    print('Data was loaded')
    # Split data into training and testing sets
    labels = tf.keras.utils.to_categorical(labels)
    x_train, x_test, y_train, y_test = train_test_split(
        np.array(images), np.array(labels), test_size=TEST_SIZE
    )
    print('Data Compiled')

    model = keras.models.load_model('modell1')
    print('Model is build')

    model.summary()

    predictions = model.predict(x_test)
    imagesToShow = []
    guessesList = []
    actualList = []

    for i in range(0,len(images),(int((len(images)/10)-1))):
        print("Prediction i =",i,
                "guess =", np.argmax(predictions[i]),
                "probabality = ", max(predictions[i]))
        print("Label i = ", i, "actual_category = ", np.argmax(labels[i]))
        imagesToShow.append(images[i])
        guessesList.append(np.argmax(predictions[i]))
        actualList.append(np.argmax(labels[i]))

    imgGrid = image_grid(guessesList,imagesToShow,actualList)
    plt.show()


def image_grid(guessesList,imagesToShow,actualList):
    """Return a 5x5 grid of the MNIST images as a matplotlib figure."""
    # Create a figure to contain the plot.
    figure = plt.figure(figsize=(10,10))
    for i in range(25):
    # Start next subplot.
        plt.subplot(5, 5, i + 1, title=("guessed = " + guessesList[i]+", actua l= "+actualList[i]))
        plt.xticks([])
        plt.yticks([])
        plt.grid(False)
        plt.imshow(imagesToShow[i])

    return figure


if __name__ == "__main__":
    main()
